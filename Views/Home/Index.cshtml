@using System.Security.Claims
@model List<BisleriumPvtLtd.Models.Blog>

@{
    ViewData["Title"] = "Home Page";
}

<style>
    .blog-post {
        background-color: #f8f9fa;
        border-radius: 10px;
        padding: 20px;
        margin-bottom: 20px;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    }

    .blog-title {
        font-size: 1.5rem;
        color: #007bff;
        margin-bottom: 10px;
    }

    .blog-content {
        color: #333;
        margin-bottom: 15px;
    }

    .blog-author {
        font-style: italic;
        color: #666;
        margin-bottom: 10px;
    }

    .btn-upvote,
    .btn-downvote {
        margin-right: 10px;
    }

    .btn-comment {
        margin-top: 10px;
    }

    .comment {
        margin-left: 20px;
        border-left: 2px solid #007bff;
        padding-left: 10px;
        margin-bottom: 10px;
    }
</style>

<div class="text-center">
    <h1 class="display-4">Welcome</h1>
    <button id="addBlogButton">Add Blog</button>
</div>
<div class="container mt-5">
    <h2>Recent Blogs</h2>
    @foreach (var blog in Model)
    {
        var userId = User.FindFirstValue(ClaimTypes.NameIdentifier);
        var hasVoted = blog.Votes.Any(v => v.UserId == userId);
        var userVote = blog.Votes.FirstOrDefault(v => v.UserId == userId);

        <div class="blog-post">
            <h2 class="blog-title">@blog.Title</h2>
            @if (!string.IsNullOrEmpty(blog.ImageUrl))
            {
                <img src="@blog.ImageUrl" alt="Blog Image" />
            }
            <p class="blog-content">@blog.Body</p>

            @if (!hasVoted)
            {
                <form method="post" action="@Url.Action("Vote", "Blog", new { blogId = blog.Id, isUpvote = true })">
                    @Html.AntiForgeryToken()
                    <button type="submit" class="btn btn-success">👍 @blog.Upvotes</button>
                </form>

                <form method="post" action="@Url.Action("Vote", "Blog", new { blogId = blog.Id, isUpvote = false })">
                    @Html.AntiForgeryToken()
                    <button type="submit" class="btn btn-danger">👎 @blog.Downvotes</button>
                </form>
            }
            else
            {
                var userIsUpvote = userVote.IsUpvote;

                if (userIsUpvote)
                {
                    <button type="button" class="btn btn-success" disabled style="background-color: grey">👍 @blog.Upvotes</button>
                    <form method="post" action="@Url.Action("Vote", "Blog", new { blogId = blog.Id, isUpvote = false })">
                        @Html.AntiForgeryToken()
                        <button type="submit" class="btn btn-danger">👎 @blog.Downvotes</button>
                    </form>
                }
                else
                {
                    <form method="post" action="@Url.Action("Vote", "Blog", new { blogId = blog.Id, isUpvote = true })">
                        @Html.AntiForgeryToken()
                        <button type="submit" class="btn btn-success">👍 @blog.Upvotes</button>
                    </form>
                    <button type="button" class="btn btn-danger" disabled style="color: grey">👎 @blog.Downvotes</button>
                }
            }

            <!-- Add comment section -->
            <div class="comment-section">
                <h3>Comments</h3>
                <form method="post" action="@Url.Action("AddComment", "Comment")">
                    @Html.AntiForgeryToken()
                    <input type="hidden" name="blogId" value="@blog.Id" />
                    <div class="form-group">
                        <textarea class="form-control" name="content" rows="3"></textarea>
                    </div>
                    <button type="submit" class="btn btn-primary">Add Comment</button>

                </form>
              
                @if (blog.Comments != null)
                {
                <!-- Display comments -->
                @foreach (var comment in blog.Comments)
                {
                    <div class="comment">
                        <p>@comment.Content</p>
                            <p>@comment.CreatedAt</p>
                            <!-- Upvote button -->
                            <form method="post" action="@Url.Action("UpvoteComment", "Comment")">
                                @Html.AntiForgeryToken()
                                <input type="hidden" name="commentId" value="@comment.Id" />
                                <button type="submit" class="btn btn-success btn-sm">Upvote @comment.Upvotes</button>
                            </form>
                            <!-- Downvote button -->
                            <form method="post" action="@Url.Action("DownvoteComment", "Comment")">
                                @Html.AntiForgeryToken()
                                <input type="hidden" name="commentId" value="@comment.Id" />
                                <button type="submit" class="btn btn-danger btn-sm">Downvote @comment.Downvotes</button>
                            </form>
                            @if (User.Identity.IsAuthenticated && comment.UserId == User.FindFirstValue(ClaimTypes.NameIdentifier))
                            {
                                <!-- Edit and delete options for comment author -->
                                <a href="@Url.Action("EditComment", "Comment", new { commentId = comment.Id })">Edit</a>
 
                               <form method="post" action="@Url.Action("DeleteComment", "Comment")">
                                   @Html.AntiForgeryToken()
                                   <input type="hidden" name="commentId" value="@comment.Id" />
                                   <button type="submit">Delete</button>
                               </form>
                            }
                            <div class="reply-form">
                                <form method="post" action="@Url.Action("AddComment", "Comment")">
                                    @Html.AntiForgeryToken()
                                    <input type="hidden" name="blogId" value="@blog.Id" />
                                    <input type="hidden" name="parentCommentId" value="@comment.Id" />
                                    <div class="form-group">
                                        <textarea class="form-control" name="content" rows="1" placeholder="Reply to this comment..."></textarea>
                                    </div>
                                    <button type="submit" class="btn btn-primary">Reply</button>
                                </form>
                            </div>
                            
                        </div>
                    }
                
                }
            </div>
        </div>
    }
</div>
